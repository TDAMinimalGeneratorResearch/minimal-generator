


# REVISE + RESUBMIT NOTES
 
19
Li et al.Running TitleGLPK solver has1.83%of its non-integral solutions differing from an`0optimal solution by a margin793not of machine epsilon, and the Gurobi solver has0.02%of its non-integral solutions differing from an`0794optimal solution by a margin greater than machine epsilon. For the GLPK solver, when solving Program795EdgeNIUnif, instead of finding an integral solution, it occasionally finds a solution with fractional entries796that sum to1. For example, instead of assigning an edge a coefficient of1, it sometimes assigns two edges797each with a coefficient of0.5. In that way, the solution is still`1optimal, but no longer`0optimal.[[LZ:798Thus, the choice of linear solver may affect the optimization results.]]7996.7    Statistical properties of optimal cycle representatives with regard to various other800quantities of interest801Support of a representative forming a single loop in the underlying graph802As can be seen in Figure??(A), an original cycle representative may not be a single closed curve. In this803example, the Betti numberβ1(xOrig) = 2; colloquially, this representative consists of two “loops”. The804number of loops in a cycle representativexis the first Betti number of the support ofx(equivalently, the805nullity of the column submatrix∂1[:,S], whereS={i:xi6= 0}is the support ofx). We are interested in806exploring how often the support of an original cycle representative forms a single loop in the underlying807graph. We analyze each of the 360 synthetic data sets of various dimensions and distributions discussed in808Section 5.2 and display the results in Figure 9. We find that the majority of the original cycle representatives809have one loop. However, as the ambient dimension of the data increases, the proportion of the cycle810representatives with a single loop decreases, and we observe cycle representatives with up to10loops.811After optimizing each of these cycle representatives with the edge-loss methods, we verify that allFCB812andPrsHCBoptimal cycles only have one loop, whereas0.13%of the triangle-loss cycles have2loops.813Overall effectiveness of optimization (L•(x••)vs.L•(xOrig))814We compare the optimal representatives against the original cycle representatives with respect to edge-loss functionsLE-UnifandLE-Len. As shown in Figure 10, we find that the optimizations are in generaleffective in reducing the size of the cycle representative, especially for representatives with larger size. Oneach of the subfigures, the horizontal axis is the size of the original cycle representative and the verticalaxis is the ratio between the loss of each optimal representative and the loss of the original representative:C••L•(xOrig).The averageCNIE-UnifLE-Unif(xOrig)over all cycle representatives is90.16%and the average forCNIE-LenLE-Len(xOrig)over815all cycle representatives is90.36%for cycles obtained from Algorithm 1.816The averageCNIE-UnifLE-Unif(xOrig)over all cycle representatives is89.64%and the average forCNIE-LenLE-Len(xOrig)over817all cycle representatives is89.72%for cycles obtained from Program(6). We do not have a way to measure818the effectiveness of the volume optimal cycles.819Comparing solutions to the integral programs and non-integral programs (xNI•vs.xI•)820Among allPrsHCBcycle representatives,66.38%of them havexNIE-Unif=xIE-Unif, and99.51%of821them havexNIE-Len=xIE-Len. We findxNIT-Unif=xIT-Uniffor74.27%of the cycle representatives when822using the triangle-loss Program (13).823Cycle representative size for different distributions and dimensions824Frontiers27
Li et al.Running TitleFigure 11 provides a summary of the size and number of cycle representatives found for each distribution825data set described in Section 5.2. We observe that there tend to be both more representatives as well as826more representatives with more1-simplices for higher dimensions.827Duplicate intervals in the barcode828Of all data sets analyzed, the only one to have duplicate intervals — multiple features with the same829birth/death times — in its barcode isKlein. This indicates that duplicate intervals are rare in practice, at830least in dimension 1. We note that Algorithm 1 replaces cycles that have been optimized in the cycle basis831for later cycle optimization, as without doing so it is possible in theory to get a set of optimized cycles832that no longer form a basis when there are duplicate intervals. However, we verify that even without this833replacement in theKleindata, we still achieve the same optimal cycles.834Edge-loss cycle representativesFCBvs.PrsHCB835We find that for84.52%ofEdgeNIUnif,90.84%ofEdgeIUnif,93.49%ofEdgeNILen, and93.49%ofEdgeILen,836theFCBedge-loss cycle representatives found by Program(6)and thePrsHCBedge-loss cycles from837Program(12)are the same, i.e. the`1norm of their difference is0. As mentioned in Remark 3.1, theFCB838cycles may not have the same death time asxOrig. For the real-world data sets,6.72%of the(EdgeNILen)839and(EdgeILen),7.65%of the(EdgeNIUnif)and4.48%of(EdgeIUnif)have lifetimes different thanxOrig.840For the randomly generated distribution data sets,7.11%of the(EdgeNILen)and(EdgeILen),8.06%of the841(EdgeNIUnif)and4.25%of(EdgeIUnif)have lifetimes different thanxOrig. All cycle representatives with842lifetimes different thanxOrighave death time beyond that ofxOrig.8436.8    Optimal Cycle Representatives for2-skeleton of Erdos-Renyi Simplicial Complexes844Costa et. al shows that a connected two dimensional simplicial complex for which every subcomplex has845fewer than three times as many edges as vertices must have the homotopy type of a wedge of circles, two846spheres and real projective planes [61].847If you create a dissimilarity matrix with iid random entries and threshold at any, then this creates an848Erdos-849Randomly weighted Simplicial complex850We generate100distance matrices each containing100points with entries drawn from the uniform851distribution. We compute persistence of the distance matrices. Among a total of34,214generators, we852have3.89%of the length-weighted edge loss generators and4.49%of the uniform-weighted edge loss853generators have entries not in{−1,0,1}.854We findLE−Unif(xNIE−Unif)LE−Unif(xIE−Unif)>1for1.07%of the generators andLE−Len(xNIE−Len)LE−Len(xIE−Len)>1for1.09%of the855generators. All of such generators do not have entries in{−1,0,1}and involve some fractional entries.856An average of96.75%of the nonzero entries in the reduced boundary matrices are in{−1,1},2.15%in857{−2,2}, and0.27%with an absolute value greater than or equal to3.858Because of the non-integrality of the original cycle representatives found by the persistence algorithm,859we fail to find an integral solution for0.27%of the edge-loss generators and0.11%of the triangle-loss860generators.861This is a provisional file, not the final typeset article28
Li et al.Running Title7    CONCLUSIONIn this work, we provide a theoretical, computational, and empirical user’s guide to optimizing cycle862representatives against four criteria of optimality: total length, number of edges, internal volume, and863area-weighted internal volume. Utilizing this framework, we undertook a study on statistical properties of864minimal cycle representatives forH1homology found via linear programming. In doing so, we made the865following four main contributions.8661.We developed a publicly available code library [56] to compute persistent homology with rational867coefficients, building on the software package Eirene [58] and implemented and extended algorithms868from [24,21] for computing minimal cycle representatives. The library employs standard linear solvers869(GLPK and Gurobi) and implements various acceleration techniques described in Section 4.4 to make870the computations more efficient.8712.We formulated specific recommendations concerning procedural factors that lie beyond the scope of872the optimization problems per se (for example, the process used to generate inputs to a solver) but873which bear directly on the overall cost of computation, and of which practitioners should be aware.8743.We used this library to compute optimal cycle representatives for a variety of real-world data sets875and randomly generated point clouds. Somewhat surprisingly, these experiments demonstrate that876computationally advantageous properties are typical for persistent cycle representatives in data. Indeed,877we find that we are able to compute uniform/length-weighted optimal cycles for all data sets we878considered, and that we are able to compute volume optimal cycles for all but six cycle representatives,879which fail due to the large number of triangles (more than20million) used in the optimization problem.880Computation time information is summarized in Table 2 and Table 3.881Consequently,  heuristic  techniques  may  provide  efficient  means  to  extract  solutions  to  cycle882representative optimization problems across a broad range of contexts. For example, we find that edge-883loss optimal cycles are faster to compute than triangle-loss optimal cycles for cycle representatives with884a longer persistence interval, whereas for cycles with shorter persistence intervals, the triangle-loss885cycle can be more computationally expensive to compute.8864.We provided statistics on various minimal cycle representatives found in these data, such as their887effectiveness in reducing the size of the original cycle representative found by the persistence algorithm888and their effectiveness evaluated against different loss functions. In doing so, we identified consistent889trends across samples that address the questions raised in Section 1.890a.Optimal cycle representatives are often significant improvements in terms of a given loss function891over the initial cycle representatives provided by persistent homology computations. Interestingly,892we find that area-weighted volume optimal cycle representatives can enclose a greater area than893length- or uniform-weighted optimal cycle representatives.894b.We find that length-weighted edge-loss optimal cycles are also optimal with respect to a uniform-895weighted edge-loss function upwards of99%of the time in the data we studied. This suggests that896one can often find a solution that is both length-weighted minimal and uniform-weighted minimal by897solving only the length-weighted minimal optimization problem. However, the triangle-loss optimal898cycles can have a relatively higher length-weighted edge-loss or uniform-weighted edge-loss than899the length/uniform-weighted minimal cycles. Thus, computing triangle-loss optimal cycles might900provide distinct information and insights.901Frontiers29
Li et al.Running Titlec.Strikingly, all`1optimal representatives but one found were also`0optimal. Thus, it appears that902solutions to the NP-hard problem of finding`0optimal cycle representatives can often be solved903using linear programming in real data.9048    CONFLICT OF INTEREST STATEMENTThe  authors  declare  that  the  research  was  conducted  in  the  absence  of  any  commercial  or  financial905relationships that could be construed as a potential conflict of interest.9069    AUTHOR CONTRIBUTIONSG.H-P. wrote the Eirene code. L.L. and C.T. wrote the rest of the code and performed all experiments.907L.L. created all figures and tables. G.H-P. and L.Z. designed, directed, and supervised the project. G.H-P.908developed the theory in the Supplementary Material. All authors contributed to the analysis of the results909and to the writing of the manuscript.91010    FUNDINGThis material is based upon work supported by the National Science Foundation under grants no. DMS-9111854683, DMS-1854703, and DMS-1854748.91211    ACKNOWLEDGMENTSThe authors are grateful to David Turner for helpful advice on selection of linear solvers. They also thank913and acknowledge the initial work done by Robert Angarone and Sophia Wiedemann on this study.91412    SUPPLEMENTAL DATADetails regarding implementation and proofs of correctness for the algorithms discussed in Section 4 as915well as an additional figure and table may be found in the Supplementary Material.91613    DATA AVAILABILITY STATEMENTThe data sets and code for this study can be found in the repository [56].917REFERENCES[1] Ghrist R.Elementary Applied Topology(CreateSpace Independent Publishing Platform) (2014).918[2] Carlsson G. Topology and data.Bulletin of the American Mathematical Society46(2009) 255–308.919[3]Giusti C, Ghrist R, Bassett DS. Two’s company, three (or more) is a simplex.Journal of computational920neuroscience41(2016) 1–14.921[4]Bendich P, Marron JS, Miller E, Pieloch A, Skwerer S. Persistent homology analysis of brain artery922trees.The annals of applied statistics10(2016) 198.923[5]Sizemore AE, Phillips-Cremins JE, Ghrist R, Bassett DS. The importance of the whole: Topological924data analysis for the network neuroscientist.Network Neuroscience3(2019) 656–673. doi:10.1162/925netn\a\00073.926[6]Br ̈uel-Gabrielsson R, Ganapathi-Subramanian V, Skraba P, Guibas LJ.   Topology-aware surface927reconstruction for point clouds.Computer Graphics Forum39(2020) 197–207. doi:https://doi.org/10.9281111/cgf.14079.929[7]Singh G, M ́emoli F, Carlsson GE. Topological methods for the analysis of high dimensional data sets930and 3d object recognition.SPBG91(2007) 100.931This is a provisional file, not the final typeset article30

- discuss integer overflow
- hamming distance

- (possibly?) erdos-reni examples [relevant to our -1/0/1 results] would see lots of 2s showing up in reduced boundary matrix because with high probability see lots of copies of $\mathbb{R}P^2$

- (possibly?) run time comparison with escolar/obayashi code [I know we talked about this but there's a small new detail to discuss]

- not for this paper but for future ones, we should revisit that dot-product constraint that Lu and Connor introduced (and which I later asked to remove).  It might be ok after all!

- (under a heading like "miscellaneous notes for the practitioner") possibly a sentence to say that Lu tried the "ball" trick and it turned out to be a little tricky figuring out the right radius



# FOR SUMMER PROJECT

- add the option to use just a column basis (in the volume-optimal regime)
- redo the paper calculations in rust
- add functionality for simplices of higher dimension
- write a tutorial (compute barcode, obtain generator, optimize generator, plot generator)